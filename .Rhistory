echo=TRUE
)
library(mbQTL)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
knitr::opts_chunk$set(
dpi=300,
warning = FALSE,
collapse = TRUE,
error = FALSE,
comment = "#>",
echo=TRUE
)
library(mbQTL)
library(tidyr)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
library(mbQTL)
knitr::opts_chunk$set(
dpi=300,
warning = FALSE,
collapse = TRUE,
error = FALSE,
comment = "#>",
echo=TRUE
)
library(mbQTL)
library(tidyr)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
correlationMicrobes<-coringTaxa(microbeAbund)
#Estimate taxa SNP - taxa correlation and estimate R2 (To what extent variance in one taxa explains the variance in snp)
one_rs_id<-all_to_all_product(SnpFile,"chr1.171282963_T") #For a specific snp
correlationMicrobes<-coringTaxa(microbeAbund)
#Estimate taxa SNP - taxa correlation and estimate R2 (To what extent variance in one taxa explains the variance in snp)
one_rs_id<-all_to_all_product(SnpFile,microbeAbund,"chr1.171282963_T") #For a specific snp
#Now estimate rho vale
for_all_rsids<-all_to_all_product(SnpFile) #for all snps
correlationMicrobes<-coringTaxa(microbeAbund)
#Estimate taxa SNP - taxa correlation and estimate R2 (To what extent variance in one taxa explains the variance in snp)
one_rs_id<-all_to_all_product(SnpFile,microbeAbund,"chr1.171282963_T") #For a specific snp
#Now estimate rho vale
for_all_rsids<-all_to_all_product(SnpFile,microbeAbund) #for all snps
#Estimate rho value for SNP - taxa relationship
taxa_SNP_Cor<-TaxaSnpCor(for_all_rsids,correlationMicrobes) #Estimate rho for all combinations of snp-taxa and taxa-taxa relationships
taxa_SNP_Cor_lim<-TaxaSnpCor(for_all_rsids,correlationMicrobes,probs = c(0.0001, 0.9999))
# estimate for the top rho values produced
#Draw heatmap of rho estimates
mbQtlCorHeatmap(taxa_SNP_Cor_lim,fontsize_col=4,fontsize_row=4)
library(mbQTL)
knitr::opts_chunk$set(
dpi=300,
warning = FALSE,
collapse = TRUE,
error = FALSE,
comment = "#>",
echo=TRUE
)
library(mbQTL)
library(tidyr)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
correlationMicrobes<-coringTaxa(microbeAbund)
#Estimate taxa SNP - taxa correlation and estimate R2 (To what extent variance in one taxa explains the variance in snp)
one_rs_id<-all_to_all_product(SnpFile,microbeAbund,"chr1.171282963_T") #For a specific snp
#Now estimate rho vale
for_all_rsids<-all_to_all_product(SnpFile,microbeAbund) #for all snps
#Estimate rho value for SNP - taxa relationship
taxa_SNP_Cor<-TaxaSnpCor(for_all_rsids,correlationMicrobes) #Estimate rho for all combinations of snp-taxa and taxa-taxa relationships
taxa_SNP_Cor_lim<-TaxaSnpCor(for_all_rsids,correlationMicrobes,probs = c(0.0001, 0.9999))
# estimate for the top rho values produced
#Draw heatmap of rho estimates
mbQtlCorHeatmap(taxa_SNP_Cor_lim,fontsize_col=4,fontsize_row=4)
?tidy
tidy
library(mbQTL)
??tidy
library(mbQTL)
library(mbQTL)
library(mbQTL)
library(mbQTL)
knitr::opts_chunk$set(
dpi=300,
warning = FALSE,
collapse = TRUE,
error = FALSE,
comment = "#>",
echo=TRUE
)
library(mbQTL)
library(tidyr)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
Logit_plot
Logit_plot<-LogitPlotSnpTaxa(microbeAbund, SnpFile, selectmicrobe = "Neisseria", rsID="chr2.241072116_A", ref="GG", alt="AA",het="AG")
Logit_plot
#Create a barplot with the specific rsID, and microbe of interest, including the genotype information for the reference versus alternate versus hetrozygous alleles and and presence absecence of microbe of interest.
Logit_plot<-LogitPlotSnpTaxa(microbeAbund, SnpFile, selectmicrobe = "Neisseria", rsID="chr2.241072116_A", ref="GG", alt="AA",het="AG")
Logit_plot
#Create a barplot with the specific rsID, and microbe of interest, including the genotype information for the reference versus alternate versus hetrozygous alleles and and presence absecence of microbe of interest.
Logit_plot<-LogitPlotSnpTaxa(microbeAbund, SnpFile, selectmicrobe = "Neisseria", rsID="chr2.241072116_A", ref="GG", alt="AA",het="AG")
Logit_plot
##Draw heatmap of rho estimates "taxa_SNP_Cor_lim" is the output of TaxaSnpCor(). You can use other pheatmap settings for extra annotation
mbQtlCorHeatmap(taxa_SNP_Cor_lim,fontsize_col=4,fontsize_row=4.5)
##Draw heatmap of rho estimates "taxa_SNP_Cor_lim" is the output of TaxaSnpCor(). You can use other pheatmap settings for extra annotation
mbQtlCorHeatmap(taxa_SNP_Cor_lim,fontsize_col=4,fontsize_row=6)
##Draw heatmap of rho estimates "taxa_SNP_Cor_lim" is the output of TaxaSnpCor(). You can use other pheatmap settings for extra annotation
mbQtlCorHeatmap(taxa_SNP_Cor_lim,fontsize_col=5,fontsize_row=7)
##Create a histogram of P values across all samples
Hist_Pvalue_LM(LinearAnalysisTaxaSNP)
#perform linear regression analysis between taxa and snps across samples and
#produce a dataframe of results.
LinearAnalysisTaxaSNP<-linearTaxaSnp(microbeAbund,SnpFile,Covariate=CovFile)
##Create a histogram of P values across all samples
Hist_Pvalue_LM(LinearAnalysisTaxaSNP)
#Create a QQPlot of expected versus estimated P value
qqPlotLm(microbeAbund,SnpFile,Covariate=CovFile)
knitr::opts_chunk$set(
dpi=300,
warning = FALSE,
collapse = TRUE,
error = FALSE,
comment = "#>",
echo=TRUE
)
library(mbQTL)
library(tidyr)
data("SnpFile")
data("microbeAbund")
data("CovFile")
doctype <- knitr::opts_knit$get("rmarkdown.pandoc.to")
#Create a barplot with the specific rsID, and microbe of interest, including the genotype information for the reference versus alternate versus hetrozygous alleles and and presence absecence of microbe of interest.
Logit_plot<-LogitPlotSnpTaxa(microbeAbund, SnpFile, selectmicrobe = "Neisseria", rsID="chr2.241072116_A", ref="GG", alt="AA",het="AG")
Logit_plot
226+95
library(phyloseq)
library("readxl")
library(tidyverse)
library("dplyr")
library(stringr)
library(readr)
##Correlation Files
#Taxa file
otu_mat<-read.table("~/Desktop/WGS_RNASeqProjWithSarah/mbQTLs/PIH100Taxanomy/PIH_V12_CSF_first100Samples_feature_table_dada2.tsv", sep ="\t", header=TRUE, row.names = 1)
table(is.na(otu_mat))
otu_mat[is.na(otu_mat)] <- 0
tax_mat1<-read.table("~/Desktop/WGS_RNASeqProjWithSarah/mbQTLs/PIH100Taxanomy/PIH_CSF_V12_first100Samples_tax_GG99_fulllength_classifier_biom-taxonomy.tsv", sep =c("\t",";"), header=TRUE, row.names = 1)
tax_mat2<-tax_mat1%>%select(taxonomy)
library(stringr)
tax_mat<-tax_mat2 %>% separate(taxonomy, c("Kingdom","Phylum","Class","Order","Family","Genus","Species"), ";")
idx <- which(tax_mat$Species == "s__")
tax_mat$Species[idx] <- tax_mat$Genus[idx]
idx1 <- which(is.na(tax_mat$Species))
tax_mat$Species[idx1] <- tax_mat$Genus[idx1]
samples_df_col <- c("text", rep("text", 15))##last 16
samples_df<- read_excel("~/Desktop/SepsisProjects/Mercedeh_Metadata/metadata_04202021.xlsx", col_types=samples_df_col )
samples_df<-as.data.frame(samples_df)
row.names(samples_df) <- samples_df$IPM_ID
samples_df <- samples_df %>% dplyr::select (-IPM_ID)
OT<-colnames(otu_mat)
#Idem for two other matrixes
#tax_mat<-as.data.frame(tax_mat)
tax_mat<-tax_mat %>% subset(!is.na(Genus))
tax_mat<-tax_mat %>% subset(Genus != " g__")
tax_mat<-tax_mat[-8]
tax_mat = tax_mat[,c("Kingdom","Phylum","Class","Order","Family","Genus","Species")]
#table(is.na(tax_mat))
#Idem for two other matrixes
otu_mat <- as.matrix(otu_mat)
tax_mat <- as.matrix(tax_mat)
#ForMatchWithOTUNamesofTaxa
rnTax<-rownames(tax_mat)
otu_mat2<-otu_mat[row.names(otu_mat) %in% rnTax, ]
#Transform to phyloseq item
OTU = otu_table(otu_mat, taxa_are_rows = TRUE)
TAX = tax_table(tax_mat)
samples1 <- sample_data(as.data.frame(samples_df))
carbomA_CSF <- phyloseq(OTU, TAX, samples1)
carbomA_CSF
glom_carbom2<-tax_glom(carbomA_CSF,taxrank="Genus")
glom_carbom2
glom_carbom2[[1]]
glom_carbom2[OTU]
glom_carbom2[OTU[1]]
glom_carbom2@otu_table
glom_carbom2@refseq
glom_carbom2@refseq
glom_carbom2@tax_table
glom_carbom2@sam_data
#phyloseqObj2MetagenomeSeqObj
meta_glom<-phyloseq_to_metagenomeSeq(glom_carbom2)
library(metagenomeSeq)
#phyloseqObj2MetagenomeSeqObj
meta_glom<-phyloseq_to_metagenomeSeq(glom_carbom2)
glom_carbom2
otu_table(glom_carbom2)
View(otu_table(glom_carbom2))
glom_carbom2
#phyloseqObj2MetagenomeSeqObj
meta_glom<-phyloseq_to_metagenomeSeq(glom_carbom2)
newPhyloObject = subset_samples!(glom_carbom2, ID %in% camel)
newPhyloObject = !subset_samples(glom_carbom2, ID %in% camel)
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
newPhyloObject = !subset_samples(glom_carbom2, ID %in% camel)
newPhyloObject = subset_samples!(glom_carbom2, ID %in% camel)
newPhyloObject = subset_samples(glom_carbom2, !ID %in% camel)
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject)
newPhyloObject
glom_carbom2
View(sample_data(newPhyloObject))
table(sample_data(newPhyloObject)$ID)
table(sample_data(newPhyloObject)$ID[2049])
table(sample_data(newPhyloObject)$ID[[2049]])
newPhyloObject2 = subset_samples(newPhyloObject, !ID %in% bad_samp & !LP_Bacth %in% batch )
newPhyloObject2 = subset_samples(newPhyloObject, !ID %in% bad_samp , !LP_Bacth %in% batch )
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Bacth %in% batch )
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049")
batch<-c("Batch1")
newPhyloObject = subset_samples(glom_carbom2, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Bacth %in% batch )
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
newPhyloObject2
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
colnames(newPhyloObject2)[colSums(newPhyloObject2) < 1]
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
total = median(sample_sums(newPhyloObject2))
standf = function(x, t=total) round(t * (x / sum(x)))
gps = transform_sample_counts(newPhyloObject2, standf)
gps
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
gpsf = filter_taxa(gps, function(x) sd(x)/mean(x) > 3.0, TRUE)
GPr  = transform_sample_counts(newPhyloObject2, function(x) x / sum(x) )
GPfr = filter_taxa(GPr, function(x) mean(x) > 1e-5, TRUE)
View(otu_table(newPhyloObject2))
View(otu_table(newPhyloObject2))==0
View(sum(otu_table(newPhyloObject2)))==0
table(sample_data(newPhyloObject))
table(sample_data(newPhyloObject@sam_data))
View((sample_data(newPhyloObject)))
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(glom_carbom2, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
GPr  = transform_sample_counts(newPhyloObject2, function(x) x / sum(x) )
GPfr = filter_taxa(GPr, function(x) mean(x) > 1e-5, TRUE)
meta_glom<-phyloseq_to_metagenomeSeq(GPfr)
GPfr
View(sample_data(GPfr))
View(otu_data(GPfr))
View(otu_table(GPfr))
View(taxa_table(GPfr))
View(tax_table(GPfr))
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
View(newPhyloObject2)
View(otu_table(newPhyloObject2))
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
mat = MRcounts(meta_glom, norm = TRUE, log = TRUE)
exportMat(mat, file = file.path("~/Desktop/", "tmp.csv"))
exportMat(mat, file = file.path("~/Desktop/", "tmp.xlxs"))
?exportMat()
mat
meta_glom
meta_glom
obj = aggTax(mat, lvl = "Genus", out = "matrix")
phylum
head(mat)
obj = aggTax(meta_glom, lvl = "Genus", out = "matrix")
mat = MRcounts(obj, norm = TRUE, log = TRUE)
obj
mat = MRcounts(obj, norm = TRUE, log = TRUE)
obj
View(obj)
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
obj = aggTax(meta_glom, lvl = "Genus")
mat = MRcounts(obj, norm = TRUE, log = TRUE)
exportMat(mat, file = file.path("~/Desktop/", "tmp.xlxs"),sep="\t")
dim(mat)
exportMat(t(mat), file = file.path("~/Desktop/", "tmp.txt"),sep="\t")
mat = t(MRcounts(obj, norm = TRUE, log = TRUE))
mat
View9(OT)
View(OT)
OT
install.packages("soeedyseq")
install.packages("speedyseq")
library(devtools)
devtools::install_git(git@github.com:hall-lab/speedseq.git)
devtools::install_git("git@github.com:hall-lab/speedseq.git")
devtools::install_git("https://​github.com/​mikemc/​speedyseq/​")
devtools::install_git("https://​github.com/​mikemc/​speedyseq/")
devtools::install_git("git@github.com:mikemc/speedyseq.git")
library(speedyseq)
glom_carbom2<-tax_glom(carbomA_CSF,taxrank="Genus")
newPhyloObject3=rename_sample_data(newPhyloObject2 = ID)
newPhyloObject2
sample_data(newPhyloObject2)
?rename_sample_data()
rename_sample_data()
newPhyloObject3=newPhyloObject2%>%rename_sample_data(sample_id = ID)
newPhyloObject3
sample_data(newPhyloObject2)
sample_data(newPhyloObject3)
newPhyloObject3 %>% sample_variables
newPhyloObject2 %>% sample_variables
subset_samples(ID)
subset_samples(newPhyloObject2)
sample_data(newPhyloObject2)
sample_data(newPhyloObject2$ID)
sample_data(newPhyloObject2@ID)
sample_data(newPhyloObject2%>%subset_samples(ID))
newPhyloObject%>%subset_samples(ID)
sample_names(newPhyloObject2)=newPhyloObject@sam_data$ID
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
table(newPhyloObject%>%subset_samples(ID))
table(newPhyloObject@sam_data$ID)
glom_carbom2<-tax_glom(carbomA_CSF,taxrank="Genus")
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)%>%
subset_samples(!LP_Batch %in% batch )
dim(newPhyloObject)
newPhyloObject
newPhyloObject2
table(newPhyloObject@sam_data$ID)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp)
newPhyloObject2
newPhyloObject3=newPhyloObject%>%subset_samples(!LP_Batch %in% batch )
newPhyloObject3
newPhyloObject3=newPhyloObject2%>%subset_samples(!LP_Batch %in% batch )
newPhyloObject3
table(newPhyloObject@sam_data$ID)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp & !LP_Batch %in% batch)
newPhyloObject2
table(newPhyloObject2@sam_data$ID)
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
sample_names(newPhyloObject2)= newPhyloObject2@sam_data$ID
newPhyloObject2
sample_data(newPhyloObject2)
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
obj = aggTax(meta_glom, lvl = "Genus")
mat = t(MRcounts(obj, norm = TRUE, log = TRUE))
View(mat)
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
obj = aggTax(meta_glom, lvl = "Genus")
mat = t(MRcounts(obj, norm = TRUE, log = TRUE))
metagenomeSeqObj<-obj
metagenomeSeqObj<-meta_glom
metagenomeSeq_to_mbQTL<-function(meta_glom, aggregate_taxa=NULL,norm,log){
if  (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = TRUE, log = TRUE))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = TRUE, log = TRUE))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj)
metagenomeSeq_to_mbQTL<-function(meta_glom,norm,log,aggregate_taxa=NULL){
if  (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = norm))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = norm))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj,norm=TRUE,log=TRUE )
metagenomeSeqObj
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp & !LP_Batch %in% batch)
sample_names(newPhyloObject2)= newPhyloObject2@sam_data$ID
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
metagenomeSeqObj<-meta_glom
metagenomeSeq_to_mbQTL<-function(meta_glom, norm, log, aggregate_taxa=NULL){
if  (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = norm))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = norm))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE )
metagenomeSeqObj
newPhyloObject2
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
dim(newPhyloObject)
newPhyloObject
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp & !LP_Batch %in% batch)
newPhyloObject2
newPhyloObject
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp & !LP_Batch %in% batch)
newPhyloObject2
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
meta_glom
#phyloseqObj2MetagenomeSeqObj
camel<-c("Water","POS2","POS1","POS3","Standard","NTC")
bad_samp<-c("2041","2043","2049","2052","2099","2095","2096")
batch<-c("Batch1")
newPhyloObject = subset_samples(carbomA_CSF, !ID %in% camel)
newPhyloObject2 = newPhyloObject%>%subset_samples(!ID %in% bad_samp & !LP_Batch %in% batch)
newPhyloObject2
sample_names(newPhyloObject2)= newPhyloObject2@sam_data$ID
meta_glom<-phyloseq_to_metagenomeSeq(newPhyloObject2)
metagenomeSeqObj<-meta_glom
metagenomeSeqObj
metagenomeSeq_to_mbQTL<-function(meta_glom, norm, log, aggregate_taxa=NULL){
if  (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE )
metagenomeSeq_to_mbQTL<-function(meta_glom, norm, log, aggregate_taxa=NULL){
if  (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE )
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE,aggregate_taxa=NULL )
metagenomeSeq_to_mbQTL<-function(meta_glom, norm, log, aggregate_taxa=NULL){
if (!is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE, )
metagenomeSeq_to_mbQTL<-function(meta_glom, norm, log, aggregate_taxa=NULL){
if (is.null(aggregate_taxa)){
obj= meta_glom
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}else{
obj = aggTax(meta_glom, lvl = aggregate_taxa)
mat = t(MRcounts(obj, norm = norm, log = log))
return(mat)
}
}
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE, )
metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE, aggregate_taxa= "Genus")
saveRDS(metagenomeSeq_to_mbQTL, "~/git/rafalab/mbQTL/raw_data/metagenomeSeq_to_mbQTL.RDS")
compatible_metagenome_seq<-metagenomeSeq_to_mbQTL(metagenomeSeqObj, norm=TRUE, log=TRUE, aggregate_taxa= "Genus")
saveRDS(metagenomeSeqObj, "~/git/rafa_lab/mbQTL/data-raw/metagenomeSeqReads.RDS")
class(mat)
?MRcounts()
library(mbQTL)
